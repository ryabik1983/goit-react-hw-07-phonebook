{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","store/action.js","store/contactsSelectors.js","store/services.js","store/operations.js","store/reducer.js","store/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","filterContacts","createAction","getContacts","contacts","entities","fetchContacts","a","axios","get","data","addContacts","contact","post","deleteContacts","contactId","delete","id","defaults","baseURL","createAsyncThunk","_","rejectWithValue","fetchService","response","addContact","name","phone","number","deleteContact","createReducer","fulfilled","action","payload","state","filter","isLoading","pending","rejected","error","actions","combineReducers","store","configureStore","reducer","contactsReducer","ContactForm","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","value","className","styles","preventDefault","label","input","type","onChange","pattern","title","placeholder","required","submit","Filter","useSelector","dispatch","useDispatch","target","ContactsList","contactsData","selectors","useEffect","operations","items","toLowerCaseFilter","toLowerCase","el","includes","list","map","item","span","btn","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,IAAM,yBAAyB,KAAO,4B,mBCA1HD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,4aCA3CC,EAAiBC,YAAa,UCD9BC,EAAc,SAAC,GAAD,SAAGC,SAAwBC,U,wCCI/C,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACkBC,IAAMC,IAAI,sBAD5B,uBACGC,EADH,EACGA,KADH,kBAEEA,GAFF,4C,sBAKA,SAAeC,EAAtB,kC,4CAAO,WAA2BC,GAA3B,iBAAAL,EAAA,sEACkBC,IAAMK,KAAK,qBAAsBD,GADnD,uBACGF,EADH,EACGA,KADH,kBAEEA,GAFF,4C,sBAKA,SAAeI,EAAtB,kC,4CAAO,WAA8BC,GAA9B,iBAAAR,EAAA,sEAGKC,IAAMQ,OAAN,6BAAmCD,IAHxC,uBAEKE,EAFL,EAEHP,KAAQO,GAFL,kBAIEA,GAJF,4C,sBAZPT,IAAMU,SAASC,QAAU,8CCClB,I,MAAMb,EAAgBc,YAC3B,uBAD2C,uCAE3C,WAAOC,EAAP,oBAAAd,EAAA,6DAAYe,EAAZ,EAAYA,gBAAZ,kBAE2BC,IAF3B,cAEUC,EAFV,yBAGWA,GAHX,yDAKWF,EAAgB,EAAD,KAL1B,yDAF2C,yDAYhCG,EAAaL,YACxB,sBADwC,uCAExC,uCAAAb,EAAA,6DAASmB,EAAT,EAASA,KAAcC,EAAvB,EAAeC,OAAmBN,EAAlC,EAAkCA,gBAAlC,SAEUV,EAAU,CAAEc,OAAMC,SAF5B,SAG2BJ,EAAyBX,GAHpD,cAGUY,EAHV,yBAIWA,GAJX,2DAMWF,EAAgB,EAAD,KAN1B,0DAFwC,yDAa7BO,EAAgBT,YAC3B,yBAD2C,uCAE3C,WAAOL,EAAP,oBAAAR,EAAA,6DAAoBe,EAApB,EAAoBA,gBAApB,kBAE2BC,EAA4BR,GAFvD,cAEUS,EAFV,yBAGWA,GAHX,yDAKWF,EAAgB,EAAD,KAL1B,yDAF2C,yDCxBvCjB,EAAWyB,YAAc,IAAD,mBAC3BxB,EAAcyB,WAAY,SAACV,EAAGW,GAAJ,OAAeA,EAAOC,WADrB,cAE3BR,EAAWM,WAAY,SAACG,EAAD,OAAUD,EAAV,EAAUA,QAAV,4BAA4BC,GAA5B,CAAmCD,OAF/B,cAG3BJ,EAAcE,WAAY,SAACG,EAAD,OAAUD,EAAV,EAAUA,QAAV,OACzBC,EAAMC,QAAO,qBAAGlB,KAAgBgB,QAJN,IAOxBG,EAAYN,aAAc,GAAD,mBAC5BxB,EAAc+B,SAAU,kBAAM,KADF,cAE5B/B,EAAcyB,WAAY,kBAAM,KAFJ,cAG5BzB,EAAcgC,UAAW,kBAAM,KAHH,cAI5Bb,EAAWY,SAAU,kBAAM,KAJC,cAK5BZ,EAAWM,WAAY,kBAAM,KALD,cAM5BN,EAAWa,UAAW,kBAAM,KANA,cAO5BT,EAAcQ,SAAU,kBAAM,KAPF,cAQ5BR,EAAcE,WAAY,kBAAM,KARJ,cAS5BF,EAAcS,UAAW,kBAAM,KATH,IAYzBC,EAAQT,YAAc,MAAD,mBACxBxB,EAAcgC,UAAW,SAACjB,EAAGW,GAAJ,OAAeA,EAAOC,WADvB,cAExB3B,EAAc+B,SAAU,kBAAM,QAFN,cAGxBZ,EAAWa,UAAW,SAACjB,EAAD,YAAMY,WAHJ,cAIxBR,EAAWM,WAAY,kBAAM,QAJL,cAKxBF,EAAcS,UAAW,SAACjB,EAAD,YAAMY,WALP,cAMxBJ,EAAcE,WAAY,kBAAM,QANR,IASrBI,EAASL,YAAc,GAAD,eACzBU,EAAQvC,gBAAiB,SAACoB,EAAD,YAAMY,YAGnBQ,cAAgB,CAC7BpC,WACA+B,YACAG,QACAJ,WCrCWO,EAAQC,YAAe,CAClCC,QAAS,CACPxC,SAAUyC,K,uCCuDCC,EAzDK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,EAAwBC,mBAAU,IAAlC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAA4BD,mBAAU,IAAtC,mBAAOpB,EAAP,KAAesB,EAAf,KAEMC,EAAe,SAAAC,GACS,SAAzBA,EAAEC,cAAc3B,MAAiBuB,EAAQG,EAAEC,cAAcC,OAChC,WAAzBF,EAAEC,cAAc3B,MAAmBwB,EAAUE,EAAEC,cAAcC,QAY9D,OACQ,uBAAMC,UAAWC,IAAM,aAAkBT,SAVhC,SAAAK,GACfA,EAAEK,iBACFV,EAAS,CACPrB,KAAMA,EACNE,OAAQA,IAEVqB,EAAQ,IACRC,EAAU,KAGJ,UACE,wBAAOK,UAAWC,IAAOE,MAAzB,iBAEE,uBACEH,UAAWC,IAAOG,MAClBC,KAAK,OACLlC,KAAK,OACLmC,SAAUV,EACVW,QAAQ,yHACRC,MAAM,yIACNC,YAAY,aACZC,UAAQ,EACRX,MAAO5B,OAGX,wBAAO6B,UAAWC,IAAOE,MAAzB,mBAEE,uBACEH,UAAWC,IAAOG,MAClBC,KAAK,MACLlC,KAAK,SACLmC,SAAUV,EACVW,QAAQ,yFACRC,MAAM,+FACNC,YAAY,gBACZC,UAAQ,EACRX,MAAO1B,OAGX,wBAAQ2B,UAAWC,IAAOU,OAAQN,KAAK,SAAvC,6B,iBC1BDO,EApBA,WACb,IAAMhC,EAASiC,aAAY,SAAAlC,GAAK,OAAIA,EAAM9B,SAAS+B,UAC7CkC,EAAWC,cACjB,OACE,qBAAKf,UAAWC,IAAOrB,OAAvB,SACE,wBAAOoB,UAAWC,IAAOE,MAAzB,kCAEE,uBACEH,UAAWC,IAAOG,MAClBC,KAAK,OACLN,MAAOnB,EACP0B,SAAU,SAAAT,GACRiB,EAAS7B,EAAQvC,eAAemD,EAAEmB,OAAOjB,iB,iBC4BtCkB,EAtCM,WACnB,IAAMH,EAAWC,cACXG,EAAeL,YAAYM,EAAUvE,aAC3CwE,qBAAU,kBAAMN,EAASO,EAAWtE,mBAAkB,CAAC+D,IAEvD,IAAMQ,EAAQT,aAAY,YAAmB,IACrCU,EADoC,EAAf1E,SACQ+B,OAAO4C,cAI1C,OAHcN,EAAatC,QAAO,SAAA6C,GAAE,OAClCA,EAAGtD,KAAKqD,cAAcE,SAASH,SAKnC,OACE,oBAAIvB,UAAWC,IAAO0B,KAAtB,SACGL,EAAMM,KAAI,SAAAH,GACT,OACE,qBAAIzB,UAAWC,IAAO4B,KAAtB,UACE,uBAAM7B,UAAWC,IAAO6B,KAAxB,UACGL,EAAGtD,KADN,KACcsD,EAAGrD,SAEjB,wBACE4B,UAAWC,IAAO8B,IAClB1B,KAAK,SACL3C,GAAI+D,EAAG/D,GACPsE,QAAS,WACPlB,EAASO,EAAW/C,cAAcmD,EAAG/D,MALzC,sBAJ+B+D,EAAG/D,U,MCd/B,SAASuE,IAEtB,IAAMnB,EAAWC,cAEnB,OAEA,uBAAMf,UAAU,OAAhB,UACI,oBAAIA,UAAU,QAAd,uBACA,cAAC,EAAD,CAAaR,SAAU,SAACrB,EAAME,GAAP,OAAkByC,EAASO,EAAWnD,WAAWC,EAAME,OAE9E,oBAAI2B,UAAU,QAAd,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,OCdJkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUjD,MAASA,EAAnB,SAEQ,cAAC,EAAD,QAIVkD,SAASC,eAAe,U,kBCf1B9F,EAAOC,QAAU,CAAC,aAAe,kCAAkC,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,+B","file":"static/js/main.715bdeaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2lQi_\",\"item\":\"ContactList_item__3aB4u\",\"btn\":\"ContactList_btn__2n7U9\",\"span\":\"ContactList_span__3D89n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1HTHL\",\"input\":\"Filter_input__33bIl\"};","import { createAction } from '@reduxjs/toolkit';\r\nexport const filterContacts = createAction('filter');","export const getContacts = ({ contacts }) => contacts.entities;","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61efe336732d93001778e67c.mockapi.io';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get('/contacts/contacts');\r\n  return data;\r\n}\r\n\r\nexport async function addContacts(contact) {\r\n  const { data } = await axios.post('/contacts/contacts', contact);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContacts(contactId) {\r\n  const {\r\n    data: { id },\r\n  } = await axios.delete(`/contacts/contacts/${contactId}`);\r\n  return id;\r\n}","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as fetchService from './services';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'fetchContactsSuccess',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetchService.fetchContacts();\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async ({ name, number: phone }, { rejectWithValue }) => {\r\n    try {\r\n      const contact = { name, phone };\r\n      const response = await fetchService.addContacts(contact);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetchService.deleteContacts(contactId);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { actions } from './';\r\nimport { fetchContacts, addContact, deleteContact } from './operations';\r\n\r\nconst entities = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, action) => action.payload,\r\n  [fetchContacts.pending]: () => null,\r\n  [addContact.rejected]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: () => null,\r\n  [deleteContact.rejected]: (_, { payload }) => payload,\r\n  [deleteContact.fulfilled]: () => null,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  entities,\r\n  isLoading,\r\n  error,\r\n  filter,\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './reducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});","import React, {useState} from 'react';\r\nimport styles from './ContactForm.module.css';\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState (''); \r\n  const [number, setNumber] = useState ('')\r\n  \r\n  const handleChange = e => {\r\n   if (e.currentTarget.name === 'name') setName(e.currentTarget.value);\r\n   if (e.currentTarget.name === 'number') setNumber(e.currentTarget.value); \r\n  };\r\n  \r\n  const handleSubmit = e => {\r\n        e.preventDefault();\r\n        onSubmit({\r\n          name: name,\r\n          number: number,\r\n        });\r\n        setName('');\r\n        setNumber('');\r\n      };\r\n      return (\r\n              <form className={styles['contact_form']} onSubmit={handleSubmit}>\r\n                <label className={styles.label}>\r\n                  Name\r\n                  <input\r\n                    className={styles.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    onChange={handleChange}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                    placeholder=\"Ivan Dulin\"\r\n                    required\r\n                    value={name}\r\n                  />\r\n                </label>\r\n                <label className={styles.label}>\r\n                  Number\r\n                  <input\r\n                    className={styles.input}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    onChange={handleChange}   \r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                    placeholder=\"067-233-15-14\"\r\n                    required\r\n                    value={number}\r\n                  />\r\n                </label>\r\n                <button className={styles.submit} type=\"submit\">\r\n                  Add contact\r\n                </button>\r\n              </form>\r\n            );\r\n\r\n}\r\n\r\n\r\nexport default ContactForm;\r\n\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { actions } from '../../store';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className={styles.filter}>\r\n      <label className={styles.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={e => {\r\n            dispatch(actions.filterContacts(e.target.value));\r\n          }}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport styles from './ContactList.module.css';\r\nimport { operations, selectors } from '../../store';\r\n// import * as actions from '../../store/operations';\r\n\r\nconst ContactsList = () => {\r\n  const dispatch = useDispatch();\r\n  const contactsData = useSelector(selectors.getContacts);\r\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\r\n  \r\n  const items = useSelector(({ contacts }) => {\r\n    const toLowerCaseFilter = contacts.filter.toLowerCase();\r\n    const items = contactsData.filter(el =>\r\n      el.name.toLowerCase().includes(toLowerCaseFilter),\r\n    );\r\n    return items;\r\n  });\r\n  \r\n  return (\r\n    <ul className={styles.list}>\r\n      {items.map(el => {\r\n        return (\r\n          <li className={styles.item} key={el.id}>\r\n            <span className={styles.span}>\r\n              {el.name}: {el.phone}\r\n            </span>\r\n            <button\r\n              className={styles.btn}\r\n              type=\"button\"\r\n              id={el.id}\r\n              onClick={() => {\r\n                dispatch(operations.deleteContact(el.id));\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactsList from './components/ContactList/ContactList';\r\nimport { useDispatch } from 'react-redux';\r\nimport { operations } from './store/';\r\nimport './App.css';\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\nreturn (\r\n  \r\n<main className=\"main\">\r\n    <h1 className=\"title\">Phonebook</h1>\r\n    <ContactForm onSubmit={(name, number) => dispatch(operations.addContact(name, number))}\r\n    />\r\n    <h2 className=\"title\">Contacts</h2>\r\n    <Filter/>\r\n    <ContactsList/>\r\n  </main>\r\n)  \r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store}>\r\n    {/* <PersistGate loading={null} persistor={persistor}> */}\r\n            <App />\r\n          {/* </PersistGate> */}\r\n    </Provider>\r\n      </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"ContactForm_contact_form__gHIr3\",\"label\":\"ContactForm_label__1S0d_\",\"input\":\"ContactForm_input__35QKm\",\"submit\":\"ContactForm_submit__3J8e5\"};"],"sourceRoot":""}